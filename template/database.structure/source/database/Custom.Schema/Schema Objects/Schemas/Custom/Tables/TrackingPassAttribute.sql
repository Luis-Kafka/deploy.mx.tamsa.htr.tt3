CREATE TABLE [Custom].[TrackingPassAttribute] (
    [idAttribute]    INT                     IDENTITY (1, 1) NOT NULL,
    [idDataType]     INT                     NOT NULL,
    [Code]           [Common].[TCode]        NOT NULL,
    [Name]           [Common].[TName]        NOT NULL,
    [Description]    [Common].[TDescription] NULL,
    [DefaultValue]   SQL_VARIANT             NULL,
    [InspectionCode] NVARCHAR (100)          NOT NULL,
    [Active]         [Common].[TActive]      CONSTRAINT [DF_TrackingPassAttribute_Active] DEFAULT ((1)) NOT NULL,
    [InsDateTime]    [Common].[TDateTime]    CONSTRAINT [DF_TrackingPassAttribute_InsDateTime] DEFAULT (sysdatetimeoffset()) NOT NULL,
    [UpdDateTime]    [Common].[TDateTime]    CONSTRAINT [DF_TrackingPassAttribute_UpdDateTime] DEFAULT (sysdatetimeoffset()) NOT NULL,
    CONSTRAINT [PK_Attribute] PRIMARY KEY CLUSTERED ([idAttribute] ASC),
    CONSTRAINT [FK_TrackingPassAttribute_DataType] FOREIGN KEY ([idDataType]) REFERENCES [Common].[DataType] ([idDataType]),
    CONSTRAINT [UK_Custom_TrackingPassAttribute_Code_InspectionCode] UNIQUE NONCLUSTERED ([Code] ASC, [InspectionCode] ASC)
);


GO

--------------------------------------------------------------------------------
-- <auto-generated>
--     This trigger was generated by the DBA.
--     Changes to this script may cause incorrect behavior and will be lost if
--     the trigger is regenerated.
-- </auto-generated>
--------------------------------------------------------------------------------
CREATE TRIGGER [Custom].[OnUpdateTrackingPassAttribute]
ON [Custom].[TrackingPassAttribute]
AFTER UPDATE
NOT FOR REPLICATION
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Now Common.TDateTime = SYSDATETIMEOFFSET()
	UPDATE [Custom].[TrackingPassAttribute] SET UpdDateTime = @Now
	FROM Inserted I
	INNER JOIN [Custom].[TrackingPassAttribute] T ON   T.idAttribute = I.idAttribute
END