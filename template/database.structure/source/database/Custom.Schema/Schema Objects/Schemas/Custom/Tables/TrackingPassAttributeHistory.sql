CREATE TABLE [Custom].[TrackingPassAttributeHistory] (
    [idAttributeHistory] INT                  IDENTITY (1, 1) NOT NULL,
    [idTrackingPass]     INT                  NOT NULL,
    [idAttribute]        INT                  NOT NULL,
    [Value]              SQL_VARIANT          NULL,
    [Active]             [Common].[TActive]   CONSTRAINT [DF_TrackingPassAttributeHistory_Active] DEFAULT ((1)) NOT NULL,
    [InsDateTime]        [Common].[TDateTime] CONSTRAINT [DF_TrackingPassAttributeHistory_InsDateTime] DEFAULT (sysdatetimeoffset()) NOT NULL,
    [UpdDateTime]        [Common].[TDateTime] CONSTRAINT [DF_TrackingPassAttributeHistory_UpdDateTime] DEFAULT (sysdatetimeoffset()) NOT NULL,
    CONSTRAINT [PK_AttributeHistory] PRIMARY KEY CLUSTERED ([idAttributeHistory] ASC),
    CONSTRAINT [FK_TrackingPassAttributeHistory_TrackingPassAttribute] FOREIGN KEY ([idAttribute]) REFERENCES [Custom].[TrackingPassAttribute] ([idAttribute]),
    CONSTRAINT [FK_TrackingPassAttributeHistory_TrackingPassHistory] FOREIGN KEY ([idTrackingPass]) REFERENCES [Production].[TrackingPassHistory] ([idTrackingPassHistory])
);


GO
--------------------------------------------------------------------------------
-- <auto-generated>
--     This trigger was generated by the DBA.
--     Changes to this script may cause incorrect behavior and will be lost if
--     the trigger is regenerated.
-- </auto-generated>
--------------------------------------------------------------------------------
CREATE TRIGGER [Custom].[OnUpdateTrackingPassAttributeHistory]
ON [Custom].[TrackingPassAttributeHistory]
AFTER UPDATE
NOT FOR REPLICATION
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Now Common.TDateTime = SYSDATETIMEOFFSET()
	UPDATE [Custom].[TrackingPassAttributeHistory] SET UpdDateTime = @Now
	FROM Inserted I
	INNER JOIN [Custom].[TrackingPassAttributeHistory] T ON   T.idAttributeHistory = I.idAttributeHistory
END